using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

public class AESDecryptor
{
    public static string Decrypt()
    {
        // Base64-encoded encrypted data, key, and IV
        string encryptedDataBase64 = "RNo8TZ56Rv+EyZW73NocFOIiNFfL45tXw24UogGdHkswea/WhnNhCNwjQn1aWjfw";
        string keyBase64 = "/a1Y+fspq/NwlcPwpaT3irY2hcEytktuH7LsY+NlLew=";
        string ivBase64 = "9sXGmK4q9LdYFdOp4TSsQw==";

        // Convert from Base64 strings to byte arrays
        byte[] encryptedData = Convert.FromBase64String(encryptedDataBase64);
        byte[] key = Convert.FromBase64String(keyBase64);
        byte[] iv = Convert.FromBase64String(ivBase64);

        using (Aes aes = Aes.Create())
        {
            aes.Key = key;
            aes.IV = iv;

            // Create a decryptor to perform the stream transform
            ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV);

            using (var memoryStream = new MemoryStream(encryptedData))
            using (var cryptoStream = new CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read))
            using (var streamReader = new StreamReader(cryptoStream))
            {
                // Read the decrypted bytes and return as a string
                return streamReader.ReadToEnd();
            }
        }
    }

    public static void Main()
    {
        string decryptedText = Decrypt();
        Console.WriteLine("Decrypted text: ");
        Console.WriteLine(decryptedText);
    }
}